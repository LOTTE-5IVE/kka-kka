plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'java'
}

group = 'kkakka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.4")
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    /* Application */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    /* Model mapper */
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

    /* Spring Cloud */
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    /* Spring Cloud Config */
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-config'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap'

    /* Spring Cloud Bus */
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bus-amqp'

    /* DB */
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    /* lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    /* Test */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    /* Log */
    implementation 'dev.akkinoc.spring.boot:logback-access-spring-boot-starter:3.3.3'
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.12.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// asciidoctor
asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

task createDocument(type: Copy) {
    dependsOn asciidoctor
    asciidoctor
    delete file('src/main/resources/static/index.html')
    from file("build/docs/asciidoc/index.html")
    into file("src/main/resources/static")
}

build {
    dependsOn createDocument
}

bootJar {
    dependsOn createDocument
    from("${asciidoctor.outputDir}") {
        into 'static'
    }
}